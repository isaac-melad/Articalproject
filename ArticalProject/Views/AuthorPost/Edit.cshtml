@model ArticalProject.Core.Models.AuthorPost

@{
    ViewData["Title"] = "تعديل المنشور";
}

<link rel="stylesheet" href="~/css/authorpost.css" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css" />
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css" />

<div class="category-container" style="font-family: 'Cairo', sans-serif;" dir="rtl">
    <div class="container py-4">
        <div class="card post-card border-0 animate__animated animate__fadeIn">
            <div class="card-header bg-primary text-white py-4 rounded-top-3">
                <div class="d-flex align-items-center gap-3">
                    <div class="header-icon-wrapper">
                        <i class="bi bi-pencil-square fs-2"></i>
                    </div>
                    <h1 class="h3 mb-0">تعديل المنشور</h1>
                </div>
            </div>

            <div class="card-body p-4">
                <form asp-action="Edit" asp-controller="AuthorPost" method="post" enctype="multipart/form-data"
                    id="editPostForm" class="needs-validation" novalidate>
                    <div asp-validation-summary="All"
                        class="text-danger mb-4 p-3 border-start border-danger border-4 rounded-3 bg-light bg-opacity-50">
                    </div>
                    <input type="hidden" asp-for="Id" />
                    <input type="hidden" asp-for="AuthorId" />
                    <input type="hidden" asp-for="UserId" />
                    <input type="hidden" asp-for="UserName" />
                    <input type="hidden" asp-for="FullName" />

                    <div class="mb-4 form-group animate__animated animate__fadeInUp animate__delay-1s">
                        <label asp-for="PostTitle" class="form-label fw-bold">عنوان المنشور</label>
                        <div class="input-with-icon">
                            <input asp-for="PostTitle" class="form-control form-control-lg" required
                                placeholder="أدخل عنوان المنشور هنا" />
                            <i class="input-icon bi bi-type-h1"></i>
                        </div>
                        <span asp-validation-for="PostTitle" class="text-danger"></span>
                    </div>

                    <div class="form-group mb-4 animate__animated animate__fadeInUp animate__delay-2s">
                        <label asp-for="CategoryId" class="form-label fw-bold">التصنيف</label>
                        <div class="input-with-icon">
                            <select asp-for="CategoryId" class="form-select form-select-lg category-select"
                                asp-items="ViewBag.Categories">
                                <option value="">-- اختر التصنيف --</option>
                            </select>
                            <i class="input-icon bi bi-folder2-open"></i>
                        </div>
                        <span asp-validation-for="CategoryId" class="text-danger"></span>
                    </div>

                    <div class="mb-4 animate__animated animate__fadeInUp animate__delay-3s">
                        <label for="imageFile" class="form-label fw-bold">صورة المنشور</label>
                        <div class="image-upload-area" id="dropArea">
                            <div class="upload-icon">
                                <i class="bi bi-cloud-arrow-up"></i>
                            </div>
                            <h5 class="upload-text">اسحب الصورة هنا أو انقر للاختيار</h5>
                            <p class="text-muted small">اترك هذا الحقل فارغًا إذا كنت لا ترغب في تغيير الصورة الحالية.
                            </p>
                            <input type="file" id="imageFile" name="imageFile" class="form-control" accept="image/*" />
                        </div>
                    </div>

                    @if (!string.IsNullOrEmpty(Model.PostImageUrl))
                    {
                        <div class="mb-4 animate__animated animate__fadeInUp animate__delay-4s">
                            <label class="form-label fw-bold">الصورة الحالية</label>
                            <div id="imagePreviewContainer">
                                <img src="@Model.PostImageUrl" alt="صورة المنشور" id="imagePreview"
                                    class="img-fluid rounded" />
                                <button type="button" id="removeImage" class="btn btn-sm btn-danger" title="إزالة الصورة">
                                    <i class="bi bi-x"></i>
                                </button>
                            </div>
                        </div>
                    }

                    <div class="mb-4 animate__animated animate__fadeInUp animate__delay-5s">
                        <label asp-for="Content" class="form-label fw-bold">محتوى المنشور</label>
                        <textarea asp-for="Content" id="editor" class="form-control" rows="10" required
                            placeholder="أدخل محتوى المنشور هنا"></textarea>
                        <span asp-validation-for="Content" class="text-danger"></span>
                    </div>

                    <div
                        class="d-flex justify-content-between mt-5 animate__animated animate__fadeInUp animate__delay-6s">
                        <a asp-action="Index" class="btn btn-secondary btn-lg">
                            <i class="bi bi-arrow-left"></i> العودة للقائمة
                        </a>
                        <button type="submit" id="submitButton" class="btn btn-primary btn-lg">
                            <span class="spinner-border spinner-border-sm d-none" role="status"
                                aria-hidden="true"></span>
                            <span><i class="bi bi-save me-2"></i> حفظ التغييرات</span>
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.tiny.cloud/1/@ViewBag.TinyMCEApiKey/tinymce/6/tinymce.min.js" referrerpolicy="origin"></script>
    <script src="~/js/authorpost.js"></script>
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        // Initialize drag and drop functionality for image upload
        document.addEventListener('DOMContentLoaded', function () {
            const dropArea = document.getElementById('dropArea');
            const fileInput = document.getElementById('imageFile');
            const imagePreview = document.getElementById('imagePreview');
            const imagePreviewContainer = document.getElementById('imagePreviewContainer');
            const removeImageBtn = document.getElementById('removeImage');

            // Prevent default drag behaviors
            ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
                dropArea.addEventListener(eventName, preventDefaults, false);
            });

            function preventDefaults(e) {
                e.preventDefault();
                e.stopPropagation();
            }

            // Highlight drop area when item is dragged over it
            ['dragenter', 'dragover'].forEach(eventName => {
                dropArea.addEventListener(eventName, highlight, false);
            });

            ['dragleave', 'drop'].forEach(eventName => {
                dropArea.addEventListener(eventName, unhighlight, false);
            });

            function highlight() {
                dropArea.classList.add('drag-over');
            }

            function unhighlight() {
                dropArea.classList.remove('drag-over');
            }

            // Handle dropped files
            dropArea.addEventListener('drop', handleDrop, false);

            function handleDrop(e) {
                const dt = e.dataTransfer;
                const files = dt.files;
                fileInput.files = files;
                handleFiles(files);
            }

            function handleFiles(files) {
                if (files.length > 0) {
                    const file = files[0];
                    if (file.type.match('image.*')) {
                        const reader = new FileReader();
                        reader.onload = function (e) {
                            if (!imagePreviewContainer) {
                                // Create preview container if it doesn't exist
                                const container = document.createElement('div');
                                container.id = 'imagePreviewContainer';
                                container.className = 'mt-3';

                                const img = document.createElement('img');
                                img.id = 'imagePreview';
                                img.className = 'img-fluid rounded';
                                img.src = e.target.result;

                                const removeBtn = document.createElement('button');
                                removeBtn.id = 'removeImage';
                                removeBtn.className = 'btn btn-sm btn-danger';
                                removeBtn.innerHTML = '<i class="bi bi-x"></i>';
                                removeBtn.title = 'إزالة الصورة';

                                container.appendChild(img);
                                container.appendChild(removeBtn);

                                dropArea.after(container);

                                // Add event listener to the new button
                                document.getElementById('removeImage').addEventListener('click', removeImage);
                            } else {
                                // Update existing preview
                                imagePreview.src = e.target.result;
                                imagePreviewContainer.style.display = 'block';
                            }
                        };
                        reader.readAsDataURL(file);
                    }
                }
            }

            // Handle remove image button
            if (removeImageBtn) {
                removeImageBtn.addEventListener('click', removeImage);
            }

            function removeImage() {
                if (imagePreviewContainer) {
                    // Just hide the preview, don't actually remove the image until form submission
                    imagePreviewContainer.style.display = 'none';
                    // Clear the file input
                    fileInput.value = '';
                }
            }

            // Handle file input change
            fileInput.addEventListener('change', function () {
                handleFiles(this.files);
            });

            // Add dark mode specific styling for TinyMCE
            function updateTinyMCETheme() {
                if (document.body.classList.contains('dark-mode')) {
                    // Add dark mode specific styling for TinyMCE
                    const style = document.createElement('style');
                    style.id = 'tinymce-dark-mode';
                    style.innerHTML = `
                                .tox .tox-edit-area__iframe {
                                    background-color: var(--dark-surface-lighter) !important;
                                }
                                .tox .tox-statusbar {
                                    background-color: var(--dark-surface) !important;
                                    border-top: 1px solid var(--dark-border) !important;
                                    color: var(--dark-text-muted) !important;
                                }
                            `;
                    document.head.appendChild(style);
                } else {
                    // Remove dark mode styling if it exists
                    const darkStyle = document.getElementById('tinymce-dark-mode');
                    if (darkStyle) darkStyle.remove();
                }
            }

            // Check theme on load
            updateTinyMCETheme();

            // Listen for theme changes
            const observer = new MutationObserver(function (mutations) {
                mutations.forEach(function (mutation) {
                    if (mutation.attributeName === 'class' &&
                        mutation.target === document.body &&
                        mutation.target.classList.contains('dark-mode') !== undefined) {
                        updateTinyMCETheme();
                    }
                });
            });

            observer.observe(document.body, { attributes: true });
        });
    </script>
}
